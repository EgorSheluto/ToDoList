@{
    ViewData["Title"] = "Home";
}

<section id="home">
    @await Html.PartialAsync("_ToDoAdd")
    <div id="to-do-list"></div>
</section>
<script>
    let webSocket;

    (function () {
        const getWebSocketMessages = function (onMessageReceived) {
            const url = `wss://localhost:5001/api/ToDoItem/Get`;

            webSocket = new WebSocket(url);

            webSocket.onmessage = onMessageReceived;
        };

        let listElement = document.getElementById('to-do-list');

        getWebSocketMessages(function (message) {
            listElement.innerHTML = null;
            let jsonData = message.data || null;
            let data = JSON.parse(jsonData);

            const statusEnum = {
                New: 1,
                InProgress: 2,
                Completed: 3
            };

            const statusOptions = (statusId) => {
                let options = '';
                for (let status in statusEnum) {
                    if (statusEnum.hasOwnProperty(status)) {
                        options += `<option value="${statusEnum[status]}" ${statusId === statusEnum[status] && "selected"}>${status}</option>`;
                    }
                }
                return options;
            }

            if (data) {
                data.forEach((value) => {
                    listElement.innerHTML = listElement.innerHTML +=
                        `<div class="to-do-list__item" data-key="${value.Id}">
                             <span class="to-do-list__item-title">${value.Title}</span>
                             <select name="StatusList">
                                 ${statusOptions(value.StatusId)}
                             </select>
                        </div>`;
                });
                setItemListeners();
            } else {
                listElement.innerHTML = 'To-Do List is empty';
            }
        });

        const setItemListeners = () => {
            let itemsSelects = document.querySelectorAll('#to-do-list .to-do-list__item select');
            itemsSelects.forEach((itemSelect) =>
                itemSelect.addEventListener("change", (e) => {
                    let itemId = itemSelect.parentNode.getAttribute("data-key");
                    let value = e.target.value;

                    const updateUrl = 'https://localhost:5001/api/ToDoItem/Put';
                    const refreshUrl = 'https://localhost:5001/api/Account/Refresh';

                    const data = {
                        Id: itemId,
                        StatusId: value
                    };

                    fetchWrapper(
                        updateUrl,
                        'PUT',
                        refreshUrl,
                        JSON.stringify(data),
                        () => webSocket.send("send"),
                        () => window.location.href = '@Url.Action("Index", "Login")'
                    );
                })

            );
        }
    }());
</script>